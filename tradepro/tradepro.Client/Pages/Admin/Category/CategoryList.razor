@page "/admin/category"
@using MudBlazor
@using System.Net.Http.Json
@using Newtonsoft.Json
@using tradepro.Client.RestClient
@using tradepro.Logic.DTOs
@using tradepro.Logic.Request
@inject ISnackbar Snackbar
@inject NavigationManager Navigation
@inject IDialogService DialogService
@inject IRestClient RestClient


<PageTitle>Danh sách Sản Phẩm</PageTitle>
<MudTable Items="@Listcategory" Hover="true">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Danh sách sản phẩm</MudText>
        <MudButton @onclick="OpenDialogAsync" Variant="Variant.Filled" Color="Color.Primary">
            Thêm Sản Phẩm
        </MudButton>
        <MudSpacer />       
        <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>Active</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd><MudLink OnClick="@((e) => EditCategory(context))">@context.Name</MudLink></MudTd>
        <MudTd>
            <MudIconButton @onclick="@((e) => DeleteCategoryAsync(context))" Icon="@Icons.Material.Filled.Delete" aria-label="delete"></MudIconButton>
        </MudTd>       
    </RowTemplate>

</MudTable>
@code {
    private string searchString1 = "";
    private List<CategoryDto> Listcategory = new List<CategoryDto>();
    protected override async Task OnInitializedAsync()
    {
        var response = await RestClient.GetFullListCategoryAsync();
        Listcategory = JsonConvert.DeserializeObject<List<CategoryDto>>(await response.Content.ReadAsStringAsync());
    }
    private Task OpenDialogAsync()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        return DialogService.ShowAsync<AddCategory>("Thêm Sản Phẩm", options);
    }
    private  async Task DeleteCategoryAsync(CategoryDto category)
    {
        var parameters = new DialogParameters<DeleteCateogory> { { x=>x.category,category} };
        var diaglog =  await DialogService.ShowAsync<DeleteCateogory>("Delete Category", parameters);
        var result = await diaglog.Result;
        if (!result.Cancelled)
        {
            Snackbar.Add("Delete Success", Severity.Success);
        }
       
    }
    private Task EditCategory(CategoryDto category)
    {
        var parameters = new DialogParameters<EditCategory> { { x => x.category, category } };
        return DialogService.ShowAsync<EditCategory>("Sửa Sản Phẩm", parameters);
    }

}
